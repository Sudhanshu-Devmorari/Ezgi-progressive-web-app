# Generated by Django 4.2.3 on 2023-10-06 11:32

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='advertisement_pic')),
                ('ads_space', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('ads_budget', models.FloatField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('end', 'End')], default='pending', max_length=20)),
                ('ad_views_count', models.IntegerField(default=0)),
                ('ad_clicks_and_redirected_count', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BecomeEditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(blank=True, null=True)),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BecomeEditorEarnDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_type', models.CharField(blank=True, choices=[('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True, unique=True)),
                ('threshold_subscriber', models.IntegerField()),
                ('earn_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CommentatorLevelRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_level', models.CharField(blank=True, choices=[('apprentice', 'Apprentice'), ('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True)),
                ('daily_match_limit', models.IntegerField()),
                ('monthly_min_limit', models.IntegerField()),
                ('ods_limit', models.CharField(blank=True, max_length=50, null=True)),
                ('winning_limit', models.IntegerField()),
                ('sucess_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('subscriber_limit', models.CharField(blank=True, max_length=50, null=True)),
                ('level_icon', models.ImageField(blank=True, null=True, upload_to='level_icon')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, null=True), default=list, size=None)),
                ('country', models.CharField(max_length=50)),
                ('league', models.CharField(max_length=120)),
                ('date', models.DateField(default=datetime.date.today)),
                ('match_time', models.TimeField(blank=True, null=True)),
                ('match_score', models.CharField(blank=True, default='0 - 0', null=True)),
                ('match_detail', models.CharField(max_length=120)),
                ('prediction_type', models.CharField(max_length=120)),
                ('prediction', models.CharField(max_length=120)),
                ('public_content', models.BooleanField()),
                ('comment', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approve', 'Approve'), ('reject', 'Reject')], default='pending', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_resolve', models.BooleanField(default=False)),
                ('is_prediction', models.BooleanField(blank=True, null=True)),
                ('average_odds', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DataCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField(default=0)),
                ('editor', models.IntegerField(default=0)),
                ('subscription', models.IntegerField(default=0)),
                ('comment', models.IntegerField(default=0)),
                ('highlight', models.IntegerField(default=0)),
                ('advertisement', models.IntegerField(default=0)),
                ('ticket', models.IntegerField(default=0)),
                ('comment_win', models.IntegerField(default=0)),
                ('comment_lose', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EditorBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_banner', models.ImageField(blank=True, null=True, upload_to='Editor_banner')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HighlightSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_level', models.CharField(blank=True, choices=[('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True)),
                ('week_1', models.FloatField()),
                ('week_2', models.FloatField()),
                ('month_1', models.FloatField()),
                ('highlight_icon', models.ImageField(blank=True, null=True, upload_to='highlight_icon')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MembershipSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_level', models.CharField(blank=True, choices=[('apprentice', 'Apprentice'), ('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True)),
                ('plan_price', models.FloatField()),
                ('commission_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('promotion_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('promotion_duration', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResponseTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_level', models.CharField(blank=True, choices=[('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True)),
                ('duration', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), default=list, size=None)),
                ('month_1', models.FloatField()),
                ('month_3', models.FloatField()),
                ('month_6', models.FloatField()),
                ('year_1', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=150)),
                ('username', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('logged_in_using', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('age', models.CharField(blank=True, max_length=12, null=True)),
                ('about', models.CharField(blank=True, max_length=250, null=True)),
                ('category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, null=True), default=list, size=None)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic')),
                ('user_role', models.CharField(choices=[('standard', 'Standard'), ('commentator', 'Commentator'), ('sub_user', 'Sub_User')], default='standard', max_length=20)),
                ('commentator_level', models.CharField(blank=True, choices=[('apprentice', 'Apprentice'), ('journeyman', 'Journeyman'), ('master', 'Master'), ('grandmaster', 'Grandmaster')], max_length=20, null=True)),
                ('deactivate_commentator', models.CharField(blank=True, choices=[('', 'Select'), ('accept', 'Accept'), ('reject', 'Reject'), ('pending', 'Pending')], max_length=20, null=True)),
                ('commentator_status', models.CharField(blank=True, choices=[('active', 'Active'), ('pending', 'Pending'), ('deactive', 'Deactive')], max_length=20, null=True)),
                ('authorization_type', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('experience', models.CharField(blank=True, choices=[('1-2 years', '1-2 years'), ('3-4 years', '3-4 years'), ('5+ years', '5+ years'), ('10+ years', '10+ years')], max_length=20, null=True)),
                ('membership_date', models.DateField(default=datetime.date.today)),
                ('membership_end_date', models.DateField(blank=True, null=True)),
                ('success_rate', models.FloatField(blank=True, null=True)),
                ('score_points', models.IntegerField(blank=True, null=True)),
                ('is_transaction', models.BooleanField(default=False)),
                ('is_view_only', models.BooleanField(default=False)),
                ('is_process_withdrawal_request', models.BooleanField(default=False)),
                ('is_rule_update', models.BooleanField(default=False)),
                ('is_price_update', models.BooleanField(default=False)),
                ('is_withdrawal_export', models.BooleanField(default=False)),
                ('is_sales_export', models.BooleanField(default=False)),
                ('is_all_permission', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['created'], name='core_user_created_bf51fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='TicketSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('progress', 'Progress'), ('resolved', 'Resolved'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='TicketHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('create', 'Create'), ('comment_by_user', 'Comment_by_user'), ('request_for_update', 'Request_for_update'), ('redirect', 'Redirect')], default='pending', max_length=20, null=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('redirect_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='redirect_ticket', to='core.user')),
                ('request_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_request', to='core.user')),
                ('response_ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.responseticket')),
                ('ticket_support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ticketsupport')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_create', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField()),
                ('subscription', models.BooleanField()),
                ('duration', models.CharField(max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('deactive', 'Deactive')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('commentator_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentator', to='core.user')),
                ('standard_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard', to='core.user')),
            ],
        ),
        migrations.AddField(
            model_name='responseticket',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ticketsupport'),
        ),
        migrations.AddField(
            model_name='responseticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user'),
        ),
        migrations.CreateModel(
            name='PendingBalanceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editor', to='core.user')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='OtpDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_secret', models.CharField(max_length=16)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=500)),
                ('status', models.BooleanField()),
                ('date', models.DateField()),
                ('context', models.CharField(max_length=500)),
                ('admin_context', models.CharField(blank=True, max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='core.user')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='MatchDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comments')),
            ],
        ),
        migrations.CreateModel(
            name='Highlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(max_length=20)),
                ('money', models.FloatField()),
                ('highlight', models.BooleanField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('deactive', 'Deactive')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='FollowCommentator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('commentator_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentator_user', to='core.user')),
                ('standard_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard_user', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='FavEditors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('commentator_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentator1', to='core.user')),
                ('standard_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard1', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='CommissionEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='commentator_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.user'),
        ),
        migrations.CreateModel(
            name='CommentReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.IntegerField(blank=True, null=True)),
                ('favorite', models.IntegerField(blank=True, null=True)),
                ('clap', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comments')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='BlueTick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approve', 'Approve'), ('reject', 'Reject')], default='pending', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='BecomeCommentator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(max_length=20)),
                ('money', models.FloatField(blank=True, null=True)),
                ('commentator', models.BooleanField()),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('deactive', 'Deactive')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_iban', models.CharField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('approve', 'Approve'), ('reject', 'Reject')], default='', max_length=20, null=True)),
                ('total_balance', models.FloatField(blank=True, null=True)),
                ('pending_balance', models.FloatField(blank=True, null=True)),
                ('withdrawable_balance', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.AddIndex(
            model_name='comments',
            index=models.Index(fields=['created'], name='core_commen_created_56e5ed_idx'),
        ),
    ]
